version: "3"

env:
  # Set default gum style options
  BORDER: double
  BORDER_FOREGROUND: "212"
  PADDING: "1 1"
  MARGIN: "1 1"
  DOCKER_REPO: "superelectron/kubernetes-load-generator"

includes:
  common:
    taskfile: ./common/Taskfile.yaml
    dir: ./common
  postgresql:
    taskfile: ./postgresql/Taskfile.yaml
    dir: ./postgresql
  cluster:
    taskfile: ./create-cluster/Taskfile.yaml
    dir: ./create-cluster

tasks:
  api-golang:apply:
    desc: "Apply kubernetes resource manifests: api-golang"
    cmds:
      - "kubectl apply -f ./api-golang"

  client:apply:
    desc: "Apply kubernetes resource manifests: client"
    cmds:
      - "kubectl apply -f ./client"

  prepare:
    - task: cluster:start

  start:
    ###########################
    ### Notes below each command are intended to aid in troubleshooting
    ###########################
    - task: common:apply-namespace

    - task: common:deploy-traefik
    - task: common:apply-traefik-middleware
      ##########
      ## View everything you created
      # $ k get all -n system-tester
      ##########
      ## if you update your dns provider A Record, you can access at url in client/IngressRoute.yaml
      ## Get external ip from control-plane, and add to /etc/hosts
      # $ k get svc -n system-tester

    - task: postgresql:install-postgres
      ##########
      ## look at the postgres pods
      # k get pods -n postgres
      # k get pvc -n postgres
    - task: postgresql:apply-initial-db-migration-job
      ##########
      ## watch for job completion, or delete it so you can run it again
      # $ k get jobs
      # $ k delete job db-migrator -n system-tester

    - task: api-golang:apply
    - task: client:apply
      ##########
      ## View everything you created
      # $ k get all -n system-tester
      # $ kubectl get svc client -n system-tester
      ##########
      ## check the database
      # kubectl exec -it <postgres-pod-name> -n <namespace> -- bash -c "psql -U postgres -d postgres -c '\dt' -c 'SELECT * FROM <table-name>'"
      #   curl -I http://subnet.mysite.com/api/golang

  load-test:
    desc: "Apply kubernetes resource manifests: load-generator"
    cmds:
      - cmd: |
          gum style "$(cat <<EOF
          ðŸš¨  You will need to push a copy of the corresponding container image
          ðŸš¨  container image to a repository of your own because
          ðŸš¨  $DOCKER_REPO
          ðŸš¨  is private (to demonstrate how image pull secrets work)
          EOF
          )"
        silent: true
      - "kubectl apply -f ./load-generator"

  stop:
    - kubectl delete -f Namespace.yaml
    - task: cluster:stop
